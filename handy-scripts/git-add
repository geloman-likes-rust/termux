#!/bin/sh


[ -z "$(git rev-parse --show-toplevel 2> /dev/null)" ] && exit 0
[ -z "$(git ls-files -m --exclude-standard --other)" ] && echo "working tree clean, nothing to stage" && exit 0
[ -z "$1" ] || git add "$1"
[ -z "$1" ] || exit 0

CYAN='\033[0;36m'
GREEN='\033[0;92m'
NC='\033[0m'
ORANGE='\033[0;33m'
RED='\033[0;91m'

file_preview() {
  fzf -e \
    --preview "bat --theme=1337 --color=always {}" \
    --preview-window right,70% \
    --bind up:preview-page-up,down:preview-page-down \
    --header-first \
    --header "$(printf "${ORANGE}Select File")" \
    --border-label "$(printf " Stage ${CYAN}Untracked ${NC}File ")" \
    --preview-label "$(printf " ${ORANGE}File Preview ")" \
    --padding 1 \
    --pointer "" \
    --prompt "  "
}

dirty_preview() {
  fzf -e \
    --preview "git diff --color=always {1} | delta" \
    --preview-window right,70% \
    --bind up:preview-page-up,down:preview-page-down \
    --header "$(printf ${ORANGE}"Select File")" \
    --header-first \
    --border-label "$(printf " Stage ${RED}Modified ${NC}File ")" \
    --preview-label "$(printf " ${ORANGE}File Preview ")" \
    --padding 1 \
    --pointer "" \
    --prompt "  "
}

git_stage_untracked() {
  untracked_files="$(git ls-files "$(git rev-parse --show-toplevel 2> /dev/null)" --exclude-standard --others 2> /dev/null)"
  [ -z "$untracked_files" ] && echo "no untracked files, nothing to stage" && exit 0
  selected="$(echo "$untracked_files" | tr ' ' '\n' | xargs -I {} printf "${CYAN}{}\n" | file_preview)"
  [ -z "$selected" ] || git add "$selected"
}

git_stage_modified() {
  dirty_files="$(git ls-files "$(git rev-parse --show-toplevel 2> /dev/null)" -m 2> /dev/null)"
  [ -z "$dirty_files" ] && echo "no modified files, nothing to stage" && exit 0
  selected="$(echo "$dirty_files" | tr ' ' '\n' | xargs -I {} printf "${RED}{}\n" | dirty_preview)"
  [ -z "$selected" ] || git add "$selected"
}

git_stage_what() {
  selected="$(printf "${RED}modified ${CYAN}untracked" | tr ' ' '\n' | fzf --ansi --header-first --header "$(printf "git ${GREEN}add ${ORANGE}what?")" --margin=30%,30% --border-label "$(printf " ${ORANGE}Stage File ")" --pointer "" --prompt "  ")"
  [ -z "$selected" ] && exit 0
  echo "$selected"
}

git_stage() {
  selected=$(git_stage_what)
  [ "$selected" = "modified" ] && git_stage_modified
  [ "$selected" = "untracked" ] && git_stage_untracked
}

git_stage
